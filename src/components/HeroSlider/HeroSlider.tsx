"use client";import React, {useCallback, useEffect, useRef} from 'react';import Image from "next/image";import {gsap} from 'gsap';import {Swiper, SwiperSlide} from "swiper/react";// Import Swiper stylesimport 'swiper/css';// import required modulesimport { Parallax, Pagination, Navigation } from 'swiper/modules';import {cn} from "@/lib/utils";// https://chatgpt.com/c/9bafd7b1-776c-45bd-a9c1-da01d9959884const sliders = [    {        id: 1,        title: "Champagne & Fizz",        description: "Explore the diversity of one of our favourite wine regions.",        image: {            alt: "Champagne & Fizz",            src: "/images/demo/hero-banner-1x690.jpg"        }    },    {        id: 2,        title: "Champagne & Fizz",        description: "Explore the diversity of one of our favourite wine regions.",        align: "end",        image: {            alt: "Champagne & Fizz",            src: "/images/demo/hero-banner-2x690.jpg"        }    },    {        id: 3,        title: "Champagne & Fizz",        description: "Explore the diversity of one of our favourite wine regions.",        align: "start",        image: {            alt: "Champagne & Fizz",            src: "/images/demo/hero-banner-1x690.jpg"        }    }]const HeroSlider: React.FC = () => {    const titleRefs = useRef<(HTMLDivElement | null)[]>([]);    const descriptionRefs = useRef<(HTMLDivElement | null)[]>([]);    const animationElements = useCallback(() => {        titleRefs.current.forEach((ref, index) => {            if (ref) {                gsap.fromTo(ref, {opacity: 0, y: 100}, {opacity: 1, y: 0, duration: 1, delay: index * 0.5});            }        });        descriptionRefs.current.forEach((ref, index) => {            if (ref) {                gsap.fromTo(ref, {opacity: 0, y: 100}, {opacity: 1, y: 0, duration: 1.5, delay: index * 0.7});            }        });    }, []);    useEffect(() => {        animationElements();    }, [animationElements]);    return (        <>            <Swiper                spaceBetween={10}                slidesPerView={1}                speed={2000}                parallax={true}                loop={true}                modules={[Parallax, Pagination, Navigation]}                onSlideChange={() => animationElements()}                onSwiper={(swiper) => console.log(swiper)}            >                {sliders && sliders.map((slide, index) => (                    <SwiperSlide key={slide.id}>                        <div className="relative w-full h-[690px]" data-swiper-parallax="0">                            <Image                                src={slide?.image?.src}                                alt={slide?.image?.alt}                                fill                                priority                                className="object-cover"                            />                            <div className="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-black/30"></div>                        </div>                        <div className={cn(                            "absolute top-0 left-0 w-full h-full flex flex-col justify-center gap-4 px-16",                            `items-${slide?.align}`                        )}>                            <div                                // ref={(el) => {                                //     titleRefs.current[index] = el;                                // }}                                data-swiper-parallax="-70%"                            >                                <h1 className="text-7xl text-white font-marcellus font-normal">{slide?.title}</h1>                            </div>                            <div                                // ref={(el) => {                                //     descriptionRefs.current[index] = el                                // }}                                data-swiper-parallax="-100%"                            >                                <p className="text-2xl text-white font-marcellus font-normal">{slide?.description}</p>                            </div>                        </div>                    </SwiperSlide>                ))}            </Swiper>        </>    );};export default HeroSlider;